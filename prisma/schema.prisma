generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "rpg"]
}

model foo {
  id          Int     @id @default(autoincrement())
  foo_name    String  @unique
  foo_address String?

  @@schema("public")
}

model jogadores {
  id_jogador      Int           @id @default(autoincrement())
  nome_jogador    String?       @db.VarChar(32)
  apelido_jogador String?       @db.VarChar(32)
  data_insert     String?       @db.VarChar(32)
  data_update     String?       @db.VarChar(32)
  status          Boolean?
  criador         personagens[] @relation("criador")
  jogador         personagens[] @relation("jogador")

  @@schema("rpg")
}

model armamentos {
  id           Int     @id @default(autoincrement())
  nome         String? @db.VarChar(64)
  tipo         Int?
  id_arma_base Int?
  raridade     Int?    @db.SmallInt
  historia     String?
  origem       Int?
  dir_foto     String? @db.VarChar(64)
  data_insert  String? @db.VarChar(32)
  data_update  String? @db.VarChar(32)
  status       Boolean @default(true)
  descricao    String?

  @@schema("rpg")
}

model ingredientes {
  id           Int     @id @default(autoincrement())
  nome         String? @db.VarChar(72)
  historia     String?
  origem       Int?
  id_item_base Int?
  descricao    String?
  qtd_max      Int?

  @@schema("rpg")
}

model ingredientes_receita {
  id             Int @id @default(autoincrement())
  id_receita     Int
  id_ingrediente Int

  @@schema("rpg")
}

model inventario {
  id              Int     @id @default(autoincrement())
  id_personagem   Int
  status          Boolean @default(true)
  nome_inventario String? @db.VarChar(48)

  @@schema("rpg")
}

model inventario_armeiro {
  id            Int @id @default(autoincrement())
  id_inventario Int
  id_arma       Int
  nivel_arma    Int @db.SmallInt

  @@schema("rpg")
}

model inventario_itens {
  id            Int @id @default(autoincrement())
  id_inventario Int
  id_item       Int
  qtd           Int

  @@schema("rpg")
}

model inventario_magias {
  id            Int @id @default(autoincrement())
  id_inventario Int
  id_magia      Int
  nivel_magia   Int @db.SmallInt

  @@schema("rpg")
}

model inventario_talentos_classe {
  id                Int @id @default(autoincrement())
  id_inventario     Int
  id_talento_classe Int

  @@schema("rpg")
}

model inventario_talentos_raca {
  id            Int @id @default(autoincrement())
  id_inventario Int
  id_talento    Int

  @@schema("rpg")
}

model itens {
  id_item     Int     @id @default(autoincrement())
  nome        String? @db.VarChar(72)
  tipo        Int?
  historia    String?
  origem      Int?
  dir_foto    String? @db.VarChar(64)
  data_insert String? @db.VarChar(32)
  data_update String? @db.VarChar(32)
  status      Boolean @default(true)
  descricao   String?
  qtd_max     Int?

  @@schema("rpg")
}

model magias {
  id             Int     @id @default(autoincrement())
  elemental      Boolean @default(true)
  elemento_cunho Int?
  origem         Int?
  historia       String?
  data_insert    String? @db.VarChar(32)
  data_update    String? @db.VarChar(32)
  status         Boolean @default(true)
  descricao      String?

  @@schema("rpg")
}

model origem_itens {
  id             Int @id @default(autoincrement())
  id_ingrediente Int
  origem         Int

  @@schema("rpg")
}

model personagens {
  id_personagem   Int       @id @default(autoincrement())
  nome_personagem String?   @db.VarChar(64)
  id_criador      Int       @default(0)
  id_jogador      Int       @default(0)
  apelido         String?   @db.VarChar(32)
  idade           Int?
  sexo_genero     Int?
  altura          Int?
  peso            Int?
  raca            Int
  profissao       String?   @db.VarChar(48)
  classe          Int?
  subclasse       Int?
  dir_foto        String?   @db.VarChar(64)
  data_insert     String?   @db.VarChar(32)
  data_update     String?   @db.VarChar(32)
  status          Boolean   @default(true)
  titulo          String?   @db.VarChar(64)
  criador         jogadores @relation("criador", fields: [id_criador], references: [id_jogador])
  jogador         jogadores @relation("jogador", fields: [id_jogador], references: [id_jogador])
  this_raca       racas     @relation("raca", fields: [raca], references: [id])

  @@schema("rpg")
}

model racas {
  id          Int           @id @unique @default(autoincrement())
  nome        String?       @unique @db.VarChar(32)
  nome_alt    String?       @db.VarChar(32)
  hibrido     Boolean       @default(false)
  data_insert String?       @db.VarChar(32)
  data_update String?       @db.VarChar(32)
  status      Boolean       @default(true)
  historia    String?
  personagens personagens[] @relation("raca")

  @@schema("rpg")
}

model racas_hibridas {
  id        Int  @id @default(autoincrement())
  id_raca   Int
  dna_raca1 Int
  dna_raca2 Int
  dna_raca3 Int?
  dna_raca4 Int?

  @@schema("rpg")
}

model razao_talento_classe {
  id         Int @id @default(autoincrement())
  id_talento Int
  id_classe  Int

  @@schema("rpg")
}

model razao_talento_raca {
  id              Int     @id(map: "razao_talentos_pkey") @default(autoincrement())
  id_talento      Int
  id_raca         Int
  exclusivo_puros Boolean @default(false)

  @@schema("rpg")
}

model receita_itens {
  id      Int     @id @default(autoincrement())
  id_item Int
  preparo String?

  @@schema("rpg")
}

model talentos_classe {
  id          Int     @id @default(autoincrement())
  titulo      String? @db.VarChar(64)
  descricao   String
  historia    String?
  data_insert String? @db.VarChar(32)
  data_update String? @db.VarChar(32)
  status      Boolean

  @@schema("rpg")
}

model talentos_raca {
  id          Int     @id @default(autoincrement())
  titulo      String? @db.VarChar(64)
  descricao   String?
  historia    String?
  data_insert String? @db.VarChar(32)
  data_update String? @db.VarChar
  status      Boolean @default(true)

  @@schema("rpg")
}
